{"uid":"813d4cfcc0320856","name":"Create, update and delete user","fullName":"tests.api.test_reqres_user.TestReqResUser#test_create_update_delete_user","historyId":"7063cf52f2750fbcee6be177e7ab2490","time":{"start":1698564326100,"stop":1698564328194,"duration":2094},"description":"An API test with CRUD operations around the User flow using the following Portal: https://reqres.in/","descriptionHtml":"<p>An API test with CRUD operations around the User flow using the following Portal: https://reqres.in/</p>\n","status":"failed","statusMessage":"AssertionError: Debug assert false\nassert False","statusTrace":"self = <test_reqres_user.TestReqResUser object at 0x7faa32f258e0>\napi_url_endpoint = 'https://reqres.in/api/users/', new_user_name = 'Derek'\nnew_user_job = 'Zoolander', update_user_name_patch = 'Hansel'\nupdate_user_job_patch = 'Fashion star', update_user_name_put = 'Mugatu'\nupdate_user_job_put = 'Fashion guru'\n\n    @allure.title(\"Create, update and delete user\")\n    @allure.description(\n        \"An API test with CRUD operations around the User flow using the following Portal: https://reqres.in/\")\n    @allure.suite(\"API\")\n    @pytest.mark.parametrize(\n        \"new_user_name, new_user_job, update_user_name_patch, update_user_job_patch, \"\n        \"update_user_name_put, update_user_job_put\",\n        [\n            (\"Derek\", \"Zoolander\", \"Hansel\", \"Fashion star\", \"Mugatu\", \"Fashion guru\")\n        ])\n    def test_create_update_delete_user(self, api_url_endpoint, new_user_name, new_user_job,\n                                       update_user_name_patch, update_user_job_patch, update_user_name_put,\n                                       update_user_job_put):\n        status_code, user_obj = create_user(api_url_endpoint, new_user_name, new_user_job)\n        status_code_check(status_code, 201)\n        check_created_user_data(user_obj, new_user_name, new_user_job)\n        user_obj.id = \"12\"  # TODO delete in real test\n    \n        status_code, get_user_obj = get_user_by_id(api_url_endpoint, user_obj.id)\n        status_code_check(status_code, 200)\n        check_existing_user_data(get_user_obj, \"rachel.howell@reqres.in\", \"Rachel\", \"Howell\",\n                                 \"https://reqres.in/img/faces/12-image.jpg\")  # TODO delete hardcode in real test\n    \n        status_code, update_user_obj_patch = update_user_by_patch(api_url_endpoint, user_obj.id, update_user_name_patch,\n                                                                  update_user_job_patch)\n        status_code_check(status_code, 200)\n        check_updated_user_data(update_user_obj_patch, update_user_name_patch, update_user_job_patch)\n    \n        status_code, update_user_obj_put = update_user_by_put(api_url_endpoint, user_obj.id, update_user_name_put,\n                                                              update_user_job_put)\n        status_code_check(status_code, 200)\n        check_updated_user_data(update_user_obj_put, update_user_name_put, update_user_job_put)\n    \n        status_code = delete_user_by_id(api_url_endpoint, user_obj.id)\n        status_code_check(status_code, 204)\n    \n>       assert False, \"Debug assert false\"\nE       AssertionError: Debug assert false\nE       assert False\n\ntests/api/test_reqres_user.py:45: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_url_endpoint","time":{"start":1698564326098,"stop":1698564326098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"An API test with CRUD operations around the User flow using the following Portal: https://reqres.in/","status":"failed","statusMessage":"AssertionError: Debug assert false\nassert False","statusTrace":"self = <test_reqres_user.TestReqResUser object at 0x7faa32f258e0>\napi_url_endpoint = 'https://reqres.in/api/users/', new_user_name = 'Derek'\nnew_user_job = 'Zoolander', update_user_name_patch = 'Hansel'\nupdate_user_job_patch = 'Fashion star', update_user_name_put = 'Mugatu'\nupdate_user_job_put = 'Fashion guru'\n\n    @allure.title(\"Create, update and delete user\")\n    @allure.description(\n        \"An API test with CRUD operations around the User flow using the following Portal: https://reqres.in/\")\n    @allure.suite(\"API\")\n    @pytest.mark.parametrize(\n        \"new_user_name, new_user_job, update_user_name_patch, update_user_job_patch, \"\n        \"update_user_name_put, update_user_job_put\",\n        [\n            (\"Derek\", \"Zoolander\", \"Hansel\", \"Fashion star\", \"Mugatu\", \"Fashion guru\")\n        ])\n    def test_create_update_delete_user(self, api_url_endpoint, new_user_name, new_user_job,\n                                       update_user_name_patch, update_user_job_patch, update_user_name_put,\n                                       update_user_job_put):\n        status_code, user_obj = create_user(api_url_endpoint, new_user_name, new_user_job)\n        status_code_check(status_code, 201)\n        check_created_user_data(user_obj, new_user_name, new_user_job)\n        user_obj.id = \"12\"  # TODO delete in real test\n    \n        status_code, get_user_obj = get_user_by_id(api_url_endpoint, user_obj.id)\n        status_code_check(status_code, 200)\n        check_existing_user_data(get_user_obj, \"rachel.howell@reqres.in\", \"Rachel\", \"Howell\",\n                                 \"https://reqres.in/img/faces/12-image.jpg\")  # TODO delete hardcode in real test\n    \n        status_code, update_user_obj_patch = update_user_by_patch(api_url_endpoint, user_obj.id, update_user_name_patch,\n                                                                  update_user_job_patch)\n        status_code_check(status_code, 200)\n        check_updated_user_data(update_user_obj_patch, update_user_name_patch, update_user_job_patch)\n    \n        status_code, update_user_obj_put = update_user_by_put(api_url_endpoint, user_obj.id, update_user_name_put,\n                                                              update_user_job_put)\n        status_code_check(status_code, 200)\n        check_updated_user_data(update_user_obj_put, update_user_name_put, update_user_job_put)\n    \n        status_code = delete_user_by_id(api_url_endpoint, user_obj.id)\n        status_code_check(status_code, 204)\n    \n>       assert False, \"Debug assert false\"\nE       AssertionError: Debug assert false\nE       assert False\n\ntests/api/test_reqres_user.py:45: AssertionError","steps":[{"name":"Create user. POST","time":{"start":1698564326100,"stop":1698564326512,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/'"},{"name":"name","value":"'Derek'"},{"name":"job","value":"'Zoolander'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check status code","time":{"start":1698564326512,"stop":1698564326512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual_status_code","value":"201"},{"name":"expected_status_code","value":"201"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check created user data","time":{"start":1698564326512,"stop":1698564326512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"created_user","value":"CreatedUser(name='Derek', job='Zoolander', id='904', createdAt='2023-10-29T07:25:26.432Z')"},{"name":"expected_name","value":"'Derek'"},{"name":"expected_job","value":"'Zoolander'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Get user info by user id. GET","time":{"start":1698564326512,"stop":1698564326911,"duration":399},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/'"},{"name":"user_id","value":"'12'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check status code","time":{"start":1698564326911,"stop":1698564326911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual_status_code","value":"200"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check existing user data","time":{"start":1698564326912,"stop":1698564326912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"existing_user","value":"ExistingUser(id=12, email='rachel.howell@reqres.in', first_name='Rachel', last_name='Howell', avatar='https://reqres.in/img/faces/12-image.jpg')"},{"name":"expected_email","value":"'rachel.howell@reqres.in'"},{"name":"expected_first_name","value":"'Rachel'"},{"name":"expected_last_name","value":"'Howell'"},{"name":"expected_avatar","value":"'https://reqres.in/img/faces/12-image.jpg'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Update user by user id. PATCH","time":{"start":1698564326912,"stop":1698564327324,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/'"},{"name":"user_id","value":"'12'"},{"name":"name","value":"'Hansel'"},{"name":"job","value":"'Fashion star'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check status code","time":{"start":1698564327324,"stop":1698564327324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual_status_code","value":"200"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check updated user data","time":{"start":1698564327324,"stop":1698564327324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"updated_user","value":"UpdatedUser(name='Hansel', job='Fashion star', updatedAt='2023-10-29T07:25:27.245Z')"},{"name":"expected_name","value":"'Hansel'"},{"name":"expected_job","value":"'Fashion star'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Update user by user id. PUT","time":{"start":1698564327324,"stop":1698564327761,"duration":437},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/'"},{"name":"user_id","value":"'12'"},{"name":"name","value":"'Mugatu'"},{"name":"job","value":"'Fashion guru'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check status code","time":{"start":1698564327762,"stop":1698564327762,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual_status_code","value":"200"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check updated user data","time":{"start":1698564327762,"stop":1698564327762,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"updated_user","value":"UpdatedUser(name='Mugatu', job='Fashion guru', updatedAt='2023-10-29T07:25:27.678Z')"},{"name":"expected_name","value":"'Mugatu'"},{"name":"expected_job","value":"'Fashion guru'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Delete user by user id. DELETE","time":{"start":1698564327762,"stop":1698564328192,"duration":430},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/'"},{"name":"user_id","value":"'12'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Check status code","time":{"start":1698564328193,"stop":1698564328193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actual_status_code","value":"204"},{"name":"expected_status_code","value":"204"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":14,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"api_url_endpoint::0","time":{"start":1698564328230,"stop":1698564328230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"API"},{"name":"parentSuite","value":"tests.api"},{"name":"subSuite","value":"TestReqResUser"},{"name":"host","value":"fv-az256-268"},{"name":"thread","value":"1837-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_reqres_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"new_user_job","value":"'Zoolander'"},{"name":"new_user_name","value":"'Derek'"},{"name":"update_user_job_patch","value":"'Fashion star'"},{"name":"update_user_job_put","value":"'Fashion guru'"},{"name":"update_user_name_patch","value":"'Hansel'"},{"name":"update_user_name_put","value":"'Mugatu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"d823188fca2e4a45","reportUrl":"https://DmitryLegostaev.github.io/python_test_task/23//#testresult/d823188fca2e4a45","status":"passed","time":{"start":1698563504729,"stop":1698563506156,"duration":1427}},{"uid":"3ce74dced0bbe5e5","reportUrl":"https://DmitryLegostaev.github.io/python_test_task/22//#testresult/3ce74dced0bbe5e5","status":"passed","time":{"start":1698562150987,"stop":1698562153097,"duration":2110}},{"uid":"edbbdb006d4f11c2","reportUrl":"https://DmitryLegostaev.github.io/python_test_task/21//#testresult/edbbdb006d4f11c2","status":"passed","time":{"start":1698561495592,"stop":1698561497482,"duration":1890}}]},"tags":[]},"source":"813d4cfcc0320856.json","parameterValues":["'Zoolander'","'Derek'","'Fashion star'","'Fashion guru'","'Hansel'","'Mugatu'"]}