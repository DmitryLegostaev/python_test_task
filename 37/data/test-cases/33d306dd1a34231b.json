{"uid":"33d306dd1a34231b","name":"Add mattress to cart by banner on Main page","fullName":"tests.ui.test_awarasleep_shop.TestAwaraSleepShop#test_add_mattress_to_cart_by_banner","historyId":"f1e31016368d25b5f8e32886c33f0042","time":{"start":1698600089441,"stop":1698600095814,"duration":6373},"description":"A test which should open https://qa.awarasleep.com/, click on banner and add mattress to the cart","descriptionHtml":"<p>A test which should open https://qa.awarasleep.com/, click on banner and add mattress to the cart</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5619617a2fb3 <unknown>\n#1 0x5619614764a7 <unknown>\n#2 0x5619614a9c93 <unknown>\n#3 0x5619614a610c <unknown>\n#4 0x5619614e8ac6 <unknown>\n#5 0x5619614df713 <unknown>\n#6 0x5619614b218b <unknown>\n#7 0x5619614b2f7e <unknown>\n#8 0x5619617688d8 <unknown>\n#9 0x56196176c800 <unknown>\n#10 0x561961776cfc <unknown>\n#11 0x56196176d418 <unknown>\n#12 0x56196173a42f <unknown>\n#13 0x5619617914e8 <unknown>\n#14 0x5619617916b4 <unknown>\n#15 0x5619617a2143 <unknown>\n#16 0x7f217ba94ac3 <unknown>","statusTrace":"self = <test_awarasleep_shop.TestAwaraSleepShop object at 0x7f2592d1f160>\npy = <pylenium.driver.Pylenium object at 0x7f2592ce0370>\nretrieve_ui_url_endpoint = 'https://qa.awarasleep.com/'\n\n    @allure.title(\"Add mattress to cart by banner on Main page\")\n    @allure.description(\n        \"A test which should open https://qa.awarasleep.com/, click on banner and add mattress to the cart\")\n    @allure.suite(\"UI\")\n    def test_add_mattress_to_cart_by_banner(self, py, retrieve_ui_url_endpoint):\n        with allure.step(\"Open main page\"):\n>           py.visit(retrieve_ui_url_endpoint)\n\ntests/ui/test_awarasleep_shop.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py:347: in visit\n    self.webdriver.get(url)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py:220: in webdriver\n    return self.init_webdriver() if self._webdriver is None else self._webdriver\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py:191: in init_webdriver\n    self._webdriver = webdriver_factory.build_from_config(self.config)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py:152: in build_from_config\n    return build_chrome(seleniumwire_options=None, **_config)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py:195: in build_chrome\n    driver = webdriver.Chrome(\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2592cdf3a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x5619617916b4 \\\\u003Cunknown>\\\\n#15 0x5619617a2143 \\\\u003Cunknown>\\\\n#16 0x7f217ba94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5619617a2fb3 <unknown>\nE       #1 0x5619614764a7 <unknown>\nE       #2 0x5619614a9c93 <unknown>\nE       #3 0x5619614a610c <unknown>\nE       #4 0x5619614e8ac6 <unknown>\nE       #5 0x5619614df713 <unknown>\nE       #6 0x5619614b218b <unknown>\nE       #7 0x5619614b2f7e <unknown>\nE       #8 0x5619617688d8 <unknown>\nE       #9 0x56196176c800 <unknown>\nE       #10 0x561961776cfc <unknown>\nE       #11 0x56196176d418 <unknown>\nE       #12 0x56196173a42f <unknown>\nE       #13 0x5619617914e8 <unknown>\nE       #14 0x5619617916b4 <unknown>\nE       #15 0x5619617a2143 <unknown>\nE       #16 0x7f217ba94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1698600087382,"stop":1698600087458,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"test_results_dir","time":{"start":1698600087458,"stop":1698600087458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project_root","time":{"start":1698600087458,"stop":1698600087458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"py_config","time":{"start":1698600089424,"stop":1698600089425,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_override_pylenium_config_values","time":{"start":1698600089424,"stop":1698600089424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_load_pylenium_json","time":{"start":1698600089424,"stop":1698600089424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"test_case","time":{"start":1698600089424,"stop":1698600089424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"retrieve_ui_url_endpoint","time":{"start":1698600089424,"stop":1698600089424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"py","time":{"start":1698600089425,"stop":1698600089440,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"A test which should open https://qa.awarasleep.com/, click on banner and add mattress to the cart","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5619617a2fb3 <unknown>\n#1 0x5619614764a7 <unknown>\n#2 0x5619614a9c93 <unknown>\n#3 0x5619614a610c <unknown>\n#4 0x5619614e8ac6 <unknown>\n#5 0x5619614df713 <unknown>\n#6 0x5619614b218b <unknown>\n#7 0x5619614b2f7e <unknown>\n#8 0x5619617688d8 <unknown>\n#9 0x56196176c800 <unknown>\n#10 0x561961776cfc <unknown>\n#11 0x56196176d418 <unknown>\n#12 0x56196173a42f <unknown>\n#13 0x5619617914e8 <unknown>\n#14 0x5619617916b4 <unknown>\n#15 0x5619617a2143 <unknown>\n#16 0x7f217ba94ac3 <unknown>","statusTrace":"self = <test_awarasleep_shop.TestAwaraSleepShop object at 0x7f2592d1f160>\npy = <pylenium.driver.Pylenium object at 0x7f2592ce0370>\nretrieve_ui_url_endpoint = 'https://qa.awarasleep.com/'\n\n    @allure.title(\"Add mattress to cart by banner on Main page\")\n    @allure.description(\n        \"A test which should open https://qa.awarasleep.com/, click on banner and add mattress to the cart\")\n    @allure.suite(\"UI\")\n    def test_add_mattress_to_cart_by_banner(self, py, retrieve_ui_url_endpoint):\n        with allure.step(\"Open main page\"):\n>           py.visit(retrieve_ui_url_endpoint)\n\ntests/ui/test_awarasleep_shop.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py:347: in visit\n    self.webdriver.get(url)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py:220: in webdriver\n    return self.init_webdriver() if self._webdriver is None else self._webdriver\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py:191: in init_webdriver\n    self._webdriver = webdriver_factory.build_from_config(self.config)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py:152: in build_from_config\n    return build_chrome(seleniumwire_options=None, **_config)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py:195: in build_chrome\n    driver = webdriver.Chrome(\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2592cdf3a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x5619617916b4 \\\\u003Cunknown>\\\\n#15 0x5619617a2143 \\\\u003Cunknown>\\\\n#16 0x7f217ba94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5619617a2fb3 <unknown>\nE       #1 0x5619614764a7 <unknown>\nE       #2 0x5619614a9c93 <unknown>\nE       #3 0x5619614a610c <unknown>\nE       #4 0x5619614e8ac6 <unknown>\nE       #5 0x5619614df713 <unknown>\nE       #6 0x5619614b218b <unknown>\nE       #7 0x5619614b2f7e <unknown>\nE       #8 0x5619617688d8 <unknown>\nE       #9 0x56196176c800 <unknown>\nE       #10 0x561961776cfc <unknown>\nE       #11 0x56196176d418 <unknown>\nE       #12 0x56196173a42f <unknown>\nE       #13 0x5619617914e8 <unknown>\nE       #14 0x5619617916b4 <unknown>\nE       #15 0x5619617a2143 <unknown>\nE       #16 0x7f217ba94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[{"name":"Open main page","time":{"start":1698600089441,"stop":1698600095813,"duration":6372},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5619617a2fb3 <unknown>\n#1 0x5619614764a7 <unknown>\n#2 0x5619614a9c93 <unknown>\n#3 0x5619614a610c <unknown>\n#4 0x5619614e8ac6 <unknown>\n#5 0x5619614df713 <unknown>\n#6 0x5619614b218b <unknown>\n#7 0x5619614b2f7e <unknown>\n#8 0x5619617688d8 <unknown>\n#9 0x56196176c800 <unknown>\n#10 0x561961776cfc <unknown>\n#11 0x56196176d418 <unknown>\n#12 0x56196173a42f <unknown>\n#13 0x5619617914e8 <unknown>\n#14 0x5619617916b4 <unknown>\n#15 0x5619617a2143 <unknown>\n#16 0x7f217ba94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/python_test_task/python_test_task/tests/ui/test_awarasleep_shop.py\", line 15, in test_add_mattress_to_cart_by_banner\n    py.visit(retrieve_ui_url_endpoint)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py\", line 347, in visit\n    self.webdriver.get(url)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py\", line 220, in webdriver\n    return self.init_webdriver() if self._webdriver is None else self._webdriver\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py\", line 191, in init_webdriver\n    self._webdriver = webdriver_factory.build_from_config(self.config)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py\", line 152, in build_from_config\n    return build_chrome(seleniumwire_options=None, **_config)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py\", line 195, in build_chrome\n    driver = webdriver.Chrome(\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"b24c53fdfeb5b44","name":"log","source":"b24c53fdfeb5b44.txt","type":"text/plain","size":72}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"py::0","time":{"start":1698600095972,"stop":1698600097318,"duration":1346},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55be1c938fb3 <unknown>\n#1 0x55be1c60c4a7 <unknown>\n#2 0x55be1c63fc93 <unknown>\n#3 0x55be1c63c10c <unknown>\n#4 0x55be1c67eac6 <unknown>\n#5 0x55be1c675713 <unknown>\n#6 0x55be1c64818b <unknown>\n#7 0x55be1c648f7e <unknown>\n#8 0x55be1c8fe8d8 <unknown>\n#9 0x55be1c902800 <unknown>\n#10 0x55be1c90ccfc <unknown>\n#11 0x55be1c903418 <unknown>\n#12 0x55be1c8d042f <unknown>\n#13 0x55be1c9274e8 <unknown>\n#14 0x55be1c9276b4 <unknown>\n#15 0x55be1c938143 <unknown>\n#16 0x7f872c894ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/python_test_task/python_test_task/conftest.py\", line 256, in py\n    py.quit()\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py\", line 659, in quit\n    self.webdriver.quit()\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py\", line 220, in webdriver\n    return self.init_webdriver() if self._webdriver is None else self._webdriver\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/driver.py\", line 191, in init_webdriver\n    self._webdriver = webdriver_factory.build_from_config(self.config)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py\", line 152, in build_from_config\n    return build_chrome(seleniumwire_options=None, **_config)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/pylenium/webdriver_factory.py\", line 195, in build_chrome\n    driver = webdriver.Chrome(\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"retrieve_ui_url_endpoint::0","time":{"start":1698600097319,"stop":1698600097319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"UI"},{"name":"parentSuite","value":"tests.ui"},{"name":"subSuite","value":"TestAwaraSleepShop"},{"name":"host","value":"fv-az612-956"},{"name":"thread","value":"1997-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.test_awarasleep_shop"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"996c95cbc199675e","reportUrl":"https://DmitryLegostaev.github.io/python_test_task/35//#testresult/996c95cbc199675e","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x559c7dff0fb3 <unknown>\n#1 0x559c7dcc44a7 <unknown>\n#2 0x559c7dcf7c93 <unknown>\n#3 0x559c7dcf410c <unknown>\n#4 0x559c7dd36ac6 <unknown>\n#5 0x559c7dd2d713 <unknown>\n#6 0x559c7dd0018b <unknown>\n#7 0x559c7dd00f7e <unknown>\n#8 0x559c7dfb68d8 <unknown>\n#9 0x559c7dfba800 <unknown>\n#10 0x559c7dfc4cfc <unknown>\n#11 0x559c7dfbb418 <unknown>\n#12 0x559c7df8842f <unknown>\n#13 0x559c7dfdf4e8 <unknown>\n#14 0x559c7dfdf6b4 <unknown>\n#15 0x559c7dff0143 <unknown>\n#16 0x7f2753694ac3 <unknown>","time":{"start":1698599545494,"stop":1698599552240,"duration":6746}},{"uid":"7e2452054a81646c","reportUrl":"https://DmitryLegostaev.github.io/python_test_task/34//#testresult/7e2452054a81646c","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5595926d2fb3 <unknown>\n#1 0x5595923a64a7 <unknown>\n#2 0x5595923d9c93 <unknown>\n#3 0x5595923d610c <unknown>\n#4 0x559592418ac6 <unknown>\n#5 0x55959240f713 <unknown>\n#6 0x5595923e218b <unknown>\n#7 0x5595923e2f7e <unknown>\n#8 0x5595926988d8 <unknown>\n#9 0x55959269c800 <unknown>\n#10 0x5595926a6cfc <unknown>\n#11 0x55959269d418 <unknown>\n#12 0x55959266a42f <unknown>\n#13 0x5595926c14e8 <unknown>\n#14 0x5595926c16b4 <unknown>\n#15 0x5595926d2143 <unknown>\n#16 0x7f08fe294ac3 <unknown>","time":{"start":1698598978327,"stop":1698598980202,"duration":1875}}]},"tags":[]},"source":"33d306dd1a34231b.json","parameterValues":[]}